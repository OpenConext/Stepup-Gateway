services:
    saml.entity_service:
        class: Surfnet\StepupGateway\GatewayBundle\Service\SamlEntityService
        arguments:
            - @gateway.repository.saml_entity

    gateway.entity_service:
        class: Surfnet\StepupGateway\GatewayBundle\Service\SamlEntityService
        arguments:
            - @gateway.repository.gateway_saml_entity

    gateway.proxy.state_handler:
        class: Surfnet\StepupGateway\GatewayBundle\Saml\Proxy\ProxyStateHandler
        arguments:
            - @session

    gateway.proxy.response_builder:
        class: Surfnet\StepupGateway\GatewayBundle\Saml\ResponseBuilder

    gateway.proxy.response_context:
        class: Surfnet\StepupGateway\GatewayBundle\Saml\ResponseContext
        arguments:
            - @surfnet_saml.hosted.identity_provider
            - @gateway.entity_service
            - @gateway.proxy.state_handler

    gateway.service.second_factor_service:
        class: Surfnet\StepupGateway\GatewayBundle\Service\SecondFactorService
        arguments:
            - @gateway.repository.second_factor

    gateway.security.intrinsic_loa:
        public: false
        class: Surfnet\StepupBundle\Value\Loa
        factory: [@surfnet_stepup.service.loa_resolution, getLoa]

    gateway.service.response_proxy:
        class: Surfnet\StepupGateway\GatewayBundle\Service\ProxyResponseService
        arguments:
            - @surfnet_saml.hosted.identity_provider
            - @gateway.proxy.state_handler
            - @gateway.service.assertion_signing
            - @surfnet_saml.saml.attribute_dictionary
            - @saml.attribute.eduPersonTargetedID
            - @gateway.security.intrinsic_loa

    gateway.service.saml_response:
        class: Surfnet\StepupGateway\GatewayBundle\Service\SamlResponseRenderingService
        arguments:
          - @gateway.proxy.response_builder
          - @templating

    gateway.service.assertion_signing:
        class: Surfnet\StepupGateway\GatewayBundle\Saml\AssertionSigningService
        arguments:
            - @surfnet_saml.hosted.identity_provider

    gateway.service.stepup_authentication:
        class: Surfnet\StepupGateway\GatewayBundle\Service\StepUpAuthenticationService
        arguments:
            - @surfnet_stepup.service.loa_resolution
            - @gateway.repository.second_factor
            - @surfnet_gateway_api.service.yubikey
            - @surfnet_stepup.service.sms_second_factor
            - @translator
            - @logger
            - [] # See extension

    gateway.service.gateway_api_sms:
        class: Surfnet\StepupGateway\GatewayBundle\Service\GatewayApiSmsService
        arguments:
            - @surfnet_gateway_api.service.sms

    gateway.service.whitelist:
        class: Surfnet\StepupGateway\GatewayBundle\Service\WhitelistService
        arguments:
            - @gateway.repository.whitelist_entry

    gateway.service.require_selected_factor:
        class: Surfnet\StepupGateway\GatewayBundle\Service\RequireSecondFactorSelectedService
        arguments:
            - @gateway.proxy.response_context

    gateway.session.u2f:
        class: Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag
        factory: ['@session', 'getBag']
        arguments: ['gateway.service.u2f']

    gateway.session.u2f.namespaced_attribute_bag:
        public: false
        class: Symfony\Component\HttpFoundation\Session\Attribute\NamespacedAttributeBag
        arguments:
            - '__gateway.service.u2f__'
            - '/'
        calls:
            - [setName, ['gateway.service.u2f']]

    # Logging
    gateway.authentication_logger:
        class: Surfnet\StepupGateway\GatewayBundle\Monolog\Logger\AuthenticationLogger
        arguments:
            - @surfnet_stepup.service.loa_resolution
            - @gateway.proxy.state_handler
            - @gateway.service.second_factor_service
            - @gateway.authentication_logger.logger

    gateway.authentication_logger.logger:
        class: Surfnet\SamlBundle\Monolog\SamlAuthenticationLogger
        arguments:
            - @monolog.logger.authentication

    gateway.monolog.gelf_to_string_formatter:
        class: Surfnet\StepupGateway\GatewayBundle\Monolog\Formatter\GelfMessageToStringFormatter
        parent: surfnet_stepup.monolog.full_message_exception_gelf_message_formatter

    # Forms
    gateway.form.type.anchor:
        class: Surfnet\StepupGateway\GatewayBundle\Form\Type\AnchorType
        tags: [{ name: form.type, alias: anchor }]

    gateway.form.verify_yubikey:
        class: Surfnet\StepupGateway\GatewayBundle\Form\Type\VerifyYubikeyOtpType
        tags: [{ name: form.type, alias: gateway_verify_yubikey_otp }]

    gateway.form.send_sms_challenge:
        class: Surfnet\StepupGateway\GatewayBundle\Form\Type\SendSmsChallengeType
        tags: [{ name: form.type, alias: gateway_send_sms_challenge }]

    gateway.form.verify_sms_challenge:
        class: Surfnet\StepupGateway\GatewayBundle\Form\Type\VerifySmsChallengeType
        tags: [{ name: form.type, alias: gateway_verify_sms_challenge }]

    gateway.form.cancel_second_factor_verification:
        class: Surfnet\StepupGateway\GatewayBundle\Form\Type\CancelSecondFactorVerificationType
        tags: [{ name: form.type, alias: gateway_cancel_second_factor_verification }]

    # Listeners
    gateway.event_listener.locale:
        class: Surfnet\StepupGateway\GatewayBundle\EventListener\SecondFactorLocaleListener
        arguments:
            - @gateway.proxy.response_context
            - @gateway.service.second_factor_service
        tags: [{ name: kernel.event_subscriber }]
