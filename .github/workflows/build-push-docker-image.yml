name: build-push-docker-image

on:
  workflow_dispatch:

jobs:
  build-push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the latest release
        id: release
        uses: robinraju/release-downloader@v1.7
        with:
          latest: true
          fileName: "*.tar.bz2"
      
      - name: Get commit details for the tag from the latest release
        id: commit_details
        run: |
          GIT_SHA=$(git rev-list -n 1 ${{ steps.release.outputs.tag_name }})
          GIT_COMMIT_TIME=$(git show -s --format=%ci ${{ steps.release.outputs.tag_name }})
          echo "::set-output name=sha::$GIT_SHA"
          echo "::set-output name=commit_time::$GIT_COMMIT_TIME"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set docker labels and tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/openconext/stepup-gateway/stepup-gateway
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=sha
            type=raw,value=prod

      - name: Build and push the Production image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.prod
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            APP_VERSION=${{ steps.release.outputs.tag_name }}
            GIT_SHA=${{ steps.commit_details.outputs.sha }}
            GIT_COMMIT_TIME=${{ steps.commit_details.outputs.commit_time }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
